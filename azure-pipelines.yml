trigger:
  - main  # Триггер для запуска pipeline (например, ветка main)

pool:
  vmImage: 'ubuntu-latest'

variables:
  NODE_VERSION: '16'  # Указать используемую версию Node.js

steps:
  # 1. Checkout репозиторий
  - checkout: self
    displayName: "Checkout Repository"

  # 2. Установка Node.js
  - task: UseNode@1
    displayName: "Setup Node.js"
    inputs:
      version: $(NODE_VERSION)

  # 3. Установка зависимостей
  - script: npm install
    displayName: "Install Dependencies"

  # 4. Запуск Playwright тестов
  - script: npx playwright test --reporter=html
    displayName: "Run Playwright Tests"
    env:
      HEADLESS: true

  # 5. Проверка существования HTML-отчета
  - script: |
      if [ -d "playwright-report" ]; then
        echo "Report directory exists."
      else
        echo "Report directory is missing. Tests might have failed."
        exit 1
      fi
    displayName: "Check Playwright Report Directory"

  # 6. Перемещение отчета в директорию staging
  - script: |
      mkdir -p $(Build.ArtifactStagingDirectory)/playwright-report
      cp -R playwright-report/* $(Build.ArtifactStagingDirectory)/playwright-report
    displayName: "Move Playwright Report to Staging Directory"

  # 7. Публикация отчета как артефакта
  - task: PublishPipelineArtifact@1
    displayName: "Publish Playwright Report"
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/playwright-report'  # Путь к HTML-отчету
      artifact: 'PlaywrightReport'    # Имя артефакта
      publishLocation: 'pipeline'

  # 8. Ссылка на отчет в результатах
  - script: |
      echo "##vso[task.addattachment type=Distributedtask.Core.Summary;name=Playwright Report;]$(Build.ArtifactStagingDirectory)/playwright-report/index.html"
    displayName: "Attach HTML Report"
